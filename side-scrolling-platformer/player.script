
-- player.script

go.property("move_acceleration", 3500)
go.property("air_acceleration_factor", 0.8)
go.property("max_speed", 450)
go.property("gravity", -1000)
go.property("can_jump", true)
go.property("jump_takeoff_speed", 550)


local velocity = vmath.vector3(0, 0, 0)
local correction = vmath.vector3()
local ground_contact = false
local move_input = 0

local msg_contact_point_response = hash("contact_point_response")
local group_obstacle = hash("obstacle")
local input_left = hash("left")    -- Edit your input/game.input_binding file
local input_right = hash("right")
local input_jump = hash("up")




local function handle_obstacle_contact(self, normal, distance)
	local proj = vmath.dot(correction, normal)
	local comp = (distance - proj) * normal
	correction = correction + comp
	go.set_position(go.get_position() + comp)
	if normal.y > 0.7 then
		ground_contact = true
	end
	proj = vmath.dot(velocity, normal)
	if proj < 0 then
		velocity = velocity - proj * normal
	end
end

local function jump(self)
	if ground_contact then
		velocity.y = self.jump_takeoff_speed
	end
end

local function abort_jump(self)
	if velocity.y > 0 then
		velocity.y = velocity.y * 0.5
	end
end




function init(self)
	msg.post(".", "enable_movement")
end

function update(self, dt)
	local target_speed = move_input * self.max_speed
	local speed_diff = target_speed - velocity.x
	local acceleration = vmath.vector3(0, self.gravity, 0)
	if speed_diff ~= 0 then
		if speed_diff < 0 then
			acceleration.x = -self.move_acceleration
		else
			acceleration.x = self.move_acceleration
		end
		if not ground_contact then
			acceleration.x = self.air_acceleration_factor * acceleration.x
		end
	end
	local dv = acceleration * dt
	if math.abs(dv.x) > math.abs(speed_diff) then
		dv.x = speed_diff
	end
	local v0 = velocity
	velocity = velocity + dv
	local dp = (v0 + velocity) * dt * 0.5
	go.set_position(go.get_position() + dp)

	correction = vmath.vector3()
	move_input = 0
	ground_contact = false
end

function on_message(self, message_id, message, sender)
	if message_id == hash("enable_movement") then
		msg.post(".", "acquire_input_focus")
	end
	if message_id == hash("disable_movement") then
		msg.post(".", "release_input_focus")
	end
	
	if message_id == msg_contact_point_response then
		if message.group == group_obstacle then
			handle_obstacle_contact(self, message.normal, message.distance)
		end
	end
end

function on_input(self, action_id, action)
	if action_id == input_left then
		move_input = -action.value
	elseif action_id == input_right then
		move_input = action.value
	elseif action_id == input_jump and can_jump then
		if action.pressed then
			jump(self)
		elseif action.released then
			abort_jump(self)
		end
	end
end
